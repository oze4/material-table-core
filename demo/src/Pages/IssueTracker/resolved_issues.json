[
  {
    "url": "https://api.github.com/repos/mbrn/material-table/issues/1926",
    "repository_url": "https://api.github.com/repos/mbrn/material-table",
    "labels_url": "https://api.github.com/repos/mbrn/material-table/issues/1926/labels{/name}",
    "comments_url": "https://api.github.com/repos/mbrn/material-table/issues/1926/comments",
    "events_url": "https://api.github.com/repos/mbrn/material-table/issues/1926/events",
    "html_url": "https://github.com/mbrn/material-table/issues/1926",
    "id": 620151572,
    "node_id": "MDU6SXNzdWU2MjAxNTE1NzI=",
    "number": 1926,
    "title": "Is it posible to use an async data promise?",
    "user": {
      "login": "DaanvandeHaar",
      "id": 43374504,
      "node_id": "MDQ6VXNlcjQzMzc0NTA0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/43374504?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DaanvandeHaar",
      "html_url": "https://github.com/DaanvandeHaar",
      "followers_url": "https://api.github.com/users/DaanvandeHaar/followers",
      "following_url": "https://api.github.com/users/DaanvandeHaar/following{/other_user}",
      "gists_url": "https://api.github.com/users/DaanvandeHaar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DaanvandeHaar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DaanvandeHaar/subscriptions",
      "organizations_url": "https://api.github.com/users/DaanvandeHaar/orgs",
      "repos_url": "https://api.github.com/users/DaanvandeHaar/repos",
      "events_url": "https://api.github.com/users/DaanvandeHaar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DaanvandeHaar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-05-18T12:01:38Z",
    "updated_at": "2020-05-20T05:10:34Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hey, i've been trying to use the Material-Table in combination with some firebase data. But the table doesn't accept Object promises as valid data. Any idea if this is posible and if how i would implement this.",
    "score": 1,
    "type": "issue"
  },
  {
    "url": "https://api.github.com/repos/mbrn/material-table/issues/1932",
    "repository_url": "https://api.github.com/repos/mbrn/material-table",
    "labels_url": "https://api.github.com/repos/mbrn/material-table/issues/1932/labels{/name}",
    "comments_url": "https://api.github.com/repos/mbrn/material-table/issues/1932/comments",
    "events_url": "https://api.github.com/repos/mbrn/material-table/issues/1932/events",
    "html_url": "https://github.com/mbrn/material-table/pull/1932",
    "id": 622628149,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDIxNDU2MTI3",
    "number": 1932,
    "title": "Ensure path data is not processed multiple times",
    "user": {
      "login": "hodg9",
      "id": 65717404,
      "node_id": "MDQ6VXNlcjY1NzE3NDA0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/65717404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hodg9",
      "html_url": "https://github.com/hodg9",
      "followers_url": "https://api.github.com/users/hodg9/followers",
      "following_url": "https://api.github.com/users/hodg9/following{/other_user}",
      "gists_url": "https://api.github.com/users/hodg9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hodg9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hodg9/subscriptions",
      "organizations_url": "https://api.github.com/users/hodg9/orgs",
      "repos_url": "https://api.github.com/users/hodg9/repos",
      "events_url": "https://api.github.com/users/hodg9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hodg9/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-05-21T16:34:39Z",
    "updated_at": "2020-05-22T18:27:30Z",
    "closed_at": null,
    "author_association": "NONE",
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/mbrn/material-table/pulls/1932",
      "html_url": "https://github.com/mbrn/material-table/pull/1932",
      "diff_url": "https://github.com/mbrn/material-table/pull/1932.diff",
      "patch_url": "https://github.com/mbrn/material-table/pull/1932.patch"
    },
    "body": "The function `addRow` calls itself to add the `dataRows` parent `addRow(parent)`. This causes a reprocessing of the parent row, depending on the order of the data data source. If the parent row now has another sibling its path will be updated with the wrong index due to `parent.tableData.childRows.length - 1`. \r\n\r\nThe `addRow(parent)` line is needed to ensure that the parent rows `tableData` is configured. However, once configured it shouldn't need to be reprocessed and can be skipped.\r\n\r\nI believe adding check before setting the path value will solve an issue I've seen when searching tree based data. The error occures in markForTreeRemove while it tries to walk the hierarchy using path. see issue #958\r\n\r\n## Related Issue\r\n#958 \r\n\r\n## Description\r\nFix search feature when tree based data is used.\r\n\r\n## Related PRs\r\nList related PRs against other branches:\r\n\r\nbranch | PR\r\n------ | ------\r\nother_pr_production | [link]()\r\nother_pr_master | [link]()\r\n\r\n## Impacted Areas in Application\r\nList general components of the application that this PR will affect:\r\n\r\n*\r\n\r\n## Additional Notes\r\nThis is optional, feel free to follow your hearth and write here :)",
    "score": 1,
    "type": "pull_request"
  },
  {
    "url": "https://api.github.com/repos/mbrn/material-table/issues/958",
    "repository_url": "https://api.github.com/repos/mbrn/material-table",
    "labels_url": "https://api.github.com/repos/mbrn/material-table/issues/958/labels{/name}",
    "comments_url": "https://api.github.com/repos/mbrn/material-table/issues/958/comments",
    "events_url": "https://api.github.com/repos/mbrn/material-table/issues/958/events",
    "html_url": "https://github.com/mbrn/material-table/issues/958",
    "id": 478521415,
    "node_id": "MDU6SXNzdWU0Nzg1MjE0MTU=",
    "number": 958,
    "title": "Search fails with error: Cannot read property 'tableData' of undefined",
    "user": {
      "login": "benjaminvdb",
      "id": 8875786,
      "node_id": "MDQ6VXNlcjg4NzU3ODY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8875786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjaminvdb",
      "html_url": "https://github.com/benjaminvdb",
      "followers_url": "https://api.github.com/users/benjaminvdb/followers",
      "following_url": "https://api.github.com/users/benjaminvdb/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjaminvdb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjaminvdb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjaminvdb/subscriptions",
      "organizations_url": "https://api.github.com/users/benjaminvdb/orgs",
      "repos_url": "https://api.github.com/users/benjaminvdb/repos",
      "events_url": "https://api.github.com/users/benjaminvdb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjaminvdb/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2019-08-08T14:52:49Z",
    "updated_at": "2020-05-21T17:55:57Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Describe the bug**\r\nSearching fails for the provided data (see below) and component configuration with the following error:\r\n\r\n```\r\nUncaught TypeError: Cannot read property 'tableData' of undefined\r\n    at markForTreeRemove (:3000/static/js/1.chunk.js:217284)\r\n    at :3000/static/js/1.chunk.js:217308\r\n    at Array.forEach (<anonymous>)\r\n    at DataManager.treefyData (:3000/static/js/1.chunk.js:217298)\r\n    at DataManager.getRenderState (:3000/static/js/1.chunk.js:216646)\r\n    at MaterialTable.<anonymous> (:3000/static/js/1.chunk.js:215903)\r\n    at later (:3000/static/js/1.chunk.js:201658)\r\n```\r\n\r\nThe page doesn't crash, but the following is shown in the console and the search results are incorrect.\r\n\r\n<img width=\"577\" alt=\"Screenshot 2019-08-08 at 16 50 20\" src=\"https://user-images.githubusercontent.com/8875786/62713275-bb7ded00-b9fc-11e9-94bb-fe97083fcb4d.png\">\r\n\r\n**To Reproduce**\r\nEnter any search term in the upper right search box using the code and data provided below.\r\n\r\nRequired data: [tree.json](https://pastebin.com/ryZ6AreA)\r\n\r\n```\r\nimport React, { forwardRef } from \"react\";\r\nimport data from \"./tree.json\";\r\nimport MaterialTable from \"material-table\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\n\r\nconst columns = [\r\n  { title: \"Diagnose\", field: \"value\", sorting: true, defaultSort: \"asc\" }\r\n  // { title: \"id\", field: \"id\" }\r\n];\r\n\r\nconst icons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst TreeTable = ({ onChange, ...rest }) => {\r\n  const isLeaf = rowData =>\r\n    data.find(el => el.parentId === rowData.id) === undefined;\r\n\r\n  function onlyUnique(value, index, self) {\r\n    return self.indexOf(value) === index;\r\n  }\r\n\r\n  return (\r\n    <MaterialTable\r\n      {...rest}\r\n      title=\"DSM-V\"\r\n      data={data}\r\n      columns={columns}\r\n      icons={icons}\r\n      parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\r\n      options={{\r\n        selection: true,\r\n        paging: false,\r\n        sorting: true,\r\n        search: true,\r\n        showSelectAllCheckbox: false,\r\n        selectionProps: rowData => ({\r\n          disabled: !isLeaf(rowData),\r\n          color: \"primary\"\r\n        })\r\n      }}\r\n      onSelectionChange={rows =>\r\n        onChange(\r\n          rows.filter(onlyUnique).map(({ id, value }) => ({ id, value }))\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default TreeTable;\r\n```\r\n\r\n**Expected behavior**\r\nI would expect the component to filter out the rows that do not match the search term. \r\n\r\n**Desktop (please complete the following information):**\r\n - OS: macOS 10.14.6\r\n - Browser: Chrome \r\n - Version: 76.0.3809.100 (Official Build) (64-bit)\r\n\r\n**Additional context**\r\nI've done a tiny bit of debugging on the failing `markForTreeRemove` function.\r\n\r\n```\r\nvar markForTreeRemove = function markForTreeRemove(rowData) {\r\n        var pointer = _this6.treefiedData;\r\n        rowData.tableData.path.forEach(function (pathPart) {\r\n          if (pointer.tableData && pointer.tableData.childRows) {\r\n            pointer = pointer.tableData.childRows;\r\n          }\r\n\r\n          pointer = pointer[pathPart];\r\n        });\r\n        pointer.tableData.markedForTreeRemove = true;\r\n      };\r\n```\r\n\r\nAt some point in looping over `rowData.tableData.path` it encounters a `pointer` which is not an array, but an object, and tries to select index `pathPart` (which is not possible). This is one example:\r\n\r\n```\r\npointer = {\r\n    id: 791\r\n    parentId: 182\r\n    tableData: {\r\n        id: 68,\r\n        childRows: null,\r\n        markedForTreeRemove: false,\r\n        path: Array(3), \r\n        isTreeExpanded: false\r\n    }\r\n    value: \"Andere gespecificeerde slaap-waakstoornis\"\r\n    __proto__: Object\r\n}\r\n```\r\n\r\nwith `pathPart === 1` the following statement raises the error:\r\n\r\n```\r\npointer = pointer[pathPart];\r\n```",
    "score": 1,
    "type": "issue"
  },
  {
    "url": "https://api.github.com/repos/mbrn/material-table/issues/1916",
    "repository_url": "https://api.github.com/repos/mbrn/material-table",
    "labels_url": "https://api.github.com/repos/mbrn/material-table/issues/1916/labels{/name}",
    "comments_url": "https://api.github.com/repos/mbrn/material-table/issues/1916/comments",
    "events_url": "https://api.github.com/repos/mbrn/material-table/issues/1916/events",
    "html_url": "https://github.com/mbrn/material-table/issues/1916",
    "id": 618600396,
    "node_id": "MDU6SXNzdWU2MTg2MDAzOTY=",
    "number": 1916,
    "title": "Provide a custom exportRender function for each column",
    "user": {
      "login": "thefat32",
      "id": 10998637,
      "node_id": "MDQ6VXNlcjEwOTk4NjM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10998637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thefat32",
      "html_url": "https://github.com/thefat32",
      "followers_url": "https://api.github.com/users/thefat32/followers",
      "following_url": "https://api.github.com/users/thefat32/following{/other_user}",
      "gists_url": "https://api.github.com/users/thefat32/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thefat32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thefat32/subscriptions",
      "organizations_url": "https://api.github.com/users/thefat32/orgs",
      "repos_url": "https://api.github.com/users/thefat32/repos",
      "events_url": "https://api.github.com/users/thefat32/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thefat32/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 14,
    "created_at": "2020-05-14T23:42:55Z",
    "updated_at": "2020-05-22T21:12:06Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nWe are using material-table to export csv files. But when any column or column's title has a custom render that returns a React.Node (ex i18n Translate component) it get exported as [object Object].\r\n\r\n**Describe the solution you'd like**\r\nIt would be usefull to have the option to provide a custom render function (row: RowData): string and (title: ReactNode): string for each column and column's title. And those functions used when provided to render csv data.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n**Additional context**\r\n",
    "score": 1,
    "type": "issue"
  },
  {
    "url": "https://api.github.com/repos/mbrn/material-table/issues/830",
    "repository_url": "https://api.github.com/repos/mbrn/material-table",
    "labels_url": "https://api.github.com/repos/mbrn/material-table/issues/830/labels{/name}",
    "comments_url": "https://api.github.com/repos/mbrn/material-table/issues/830/comments",
    "events_url": "https://api.github.com/repos/mbrn/material-table/issues/830/events",
    "html_url": "https://github.com/mbrn/material-table/issues/830",
    "id": 468098271,
    "node_id": "MDU6SXNzdWU0NjgwOTgyNzE=",
    "number": 830,
    "title": "Override plus button functionality for adding new table row",
    "user": {
      "login": "iqasim-com",
      "id": 23281307,
      "node_id": "MDQ6VXNlcjIzMjgxMzA3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/23281307?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iqasim-com",
      "html_url": "https://github.com/iqasim-com",
      "followers_url": "https://api.github.com/users/iqasim-com/followers",
      "following_url": "https://api.github.com/users/iqasim-com/following{/other_user}",
      "gists_url": "https://api.github.com/users/iqasim-com/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iqasim-com/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iqasim-com/subscriptions",
      "organizations_url": "https://api.github.com/users/iqasim-com/orgs",
      "repos_url": "https://api.github.com/users/iqasim-com/repos",
      "events_url": "https://api.github.com/users/iqasim-com/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iqasim-com/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 38,
    "created_at": "2019-07-15T12:26:00Z",
    "updated_at": "2020-05-22T17:46:52Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Instead of using material-table predefined plus icon for adding new row, i want to add plus icon functionality to the *Add new region* button\r\nimage attached below\r\n\r\n![image](https://user-images.githubusercontent.com/23281307/61214374-323b0980-a721-11e9-9ed9-3f4e0a4c4b9d.png)\r\n",
    "score": 1,
    "type": "issue"
  }
]